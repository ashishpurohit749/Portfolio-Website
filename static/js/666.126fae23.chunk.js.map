{"version":3,"file":"static/js/666.126fae23.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","components/ProjectList.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from 'react';\r\nimport { Container, Typography, Grid, Card, CardContent, Button, CardMedia } from '@mui/material';\r\n\r\nconst projects = [\r\n  {\r\n    title: 'Project 1',\r\n    description: 'A short description of Project 1.',\r\n    image: 'path_to_image_1',\r\n    link: 'https://github.com/yourproject1',\r\n  },\r\n  {\r\n    title: 'Project 2',\r\n    description: 'A short description of Project 2.',\r\n    image: 'path_to_image_2',\r\n    link: 'https://github.com/yourproject2',\r\n  },\r\n  // Add more projects here\r\n];\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <Container sx={{ padding: '80px 20px' }} id=\"projects\">\r\n      <Typography variant=\"h2\" align=\"center\" gutterBottom sx={{ marginBottom: '40px' }}>\r\n        My Projects\r\n      </Typography>\r\n      <Grid container spacing={4} justifyContent=\"center\">\r\n        {projects.map((project, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Card\r\n              sx={{\r\n                borderRadius: 10,\r\n                boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\r\n                transition: 'transform 0.3s ease-in-out',\r\n                '&:hover': {\r\n                  transform: 'scale(1.05)',\r\n                },\r\n              }}\r\n            >\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={project.image}\r\n                alt={project.title}\r\n                sx={{\r\n                  objectFit: 'cover',\r\n                  borderTopLeftRadius: 10,\r\n                  borderTopRightRadius: 10,\r\n                }}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n                  {project.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n                  {project.description}\r\n                </Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  href={project.link}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\" // Added for security\r\n                  sx={{\r\n                    textTransform: 'none',\r\n                    '&:hover': {\r\n                      backgroundColor: '#FF5722',\r\n                    },\r\n                  }}\r\n                >\r\n                  View Project\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","component","image","src","includes","composedStyle","backgroundImage","slots","as","role","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","projects","title","description","link","Projects","_jsxs","Container","sx","id","Typography","variant","align","gutterBottom","marginBottom","Grid","container","spacing","justifyContent","map","project","index","item","xs","sm","md","Card","borderRadius","boxShadow","transition","transform","CardMedia","height","alt","borderTopLeftRadius","borderTopRightRadius","CardContent","fontWeight","color","paragraph","Button","href","target","rel","textTransform","backgroundColor"],"sourceRoot":""}