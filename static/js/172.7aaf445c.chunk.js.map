{"version":3,"file":"static/js/172.7aaf445c.chunk.js","mappings":"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","sources":["components/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CardMedia,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Edit, Delete } from '@mui/icons-material'; // Import icons\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    image: '',\r\n    link: '',\r\n  });\r\n  const [editProject, setEditProject] = useState(null); // Track project being edited\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n\r\n  // Fetch projects from backend\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/projects').then((response) => {\r\n      setProjects(response.data.data);\r\n    });\r\n  }, []);\r\n\r\n  // Handle dialog open/close\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setNewProject({ title: '', description: '', image: '', link: '' });\r\n    setEditProject(null); // Reset edit project when dialog closes\r\n  };\r\n\r\n  // Handle form input\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProject({ ...newProject, [name]: value });\r\n  };\r\n\r\n  // Submit new project\r\n  const handleAddProject = () => {\r\n    axios\r\n      .post('http://localhost:5000/api/projects', newProject)\r\n      .then((response) => {\r\n        setProjects([...projects, response.data.data]); // Add new project to state\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert('Failed to add project');\r\n      });\r\n  };\r\n\r\n  // Handle right-click and open context menu\r\n  const handleRightClick = (event, project) => {\r\n    event.preventDefault(); // Prevent the default right-click menu\r\n    setAnchorEl(event.currentTarget); // Set the position for the context menu\r\n    setCurrentProject(project); // Store the current project for deletion or editing\r\n  };\r\n\r\n  // Close context menu\r\n  const handleCloseContextMenu = () => setAnchorEl(null);\r\n\r\n  // Handle delete project\r\n  const handleDeleteProject = () => {\r\n    axios\r\n      .delete(`http://localhost:5000/api/projects/${currentProject.id}`)\r\n      .then(() => {\r\n        setProjects(projects.filter((project) => project.id !== currentProject.id));\r\n        handleCloseContextMenu(); // Close the context menu\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert('Failed to delete project');\r\n      });\r\n  };\r\n\r\n  // Handle open the update dialog\r\n  const handleUpdateProject = () => {\r\n    setEditProject(currentProject); // Set the project to be edited\r\n    setNewProject(currentProject); // Pre-fill the form with the current project data\r\n    handleOpen(); // Open the dialog\r\n    handleCloseContextMenu(); // Close the context menu\r\n  };\r\n\r\n  // Handle submit the updated project\r\n  const handleUpdateSubmit = () => {\r\n    axios\r\n      .put(`http://localhost:5000/api/projects/${newProject.id}`, newProject)\r\n      .then((response) => {\r\n        const updatedProjects = projects.map((project) =>\r\n          project.id === response.data.data.id ? response.data.data : project\r\n        );\r\n        setProjects(updatedProjects); // Update the project in the state\r\n        handleClose(); // Close the dialog\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert('Failed to update project');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ padding: '80px 20px' }} id=\"projects\">\r\n      <Typography variant=\"h2\" align=\"center\" gutterBottom sx={{ marginBottom: '40px' }}>\r\n        My Projects\r\n      </Typography>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen} sx={{ marginBottom: '20px' }}>\r\n        Add New Project\r\n      </Button>\r\n      <Grid container spacing={4}>\r\n        {projects.map((project, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Card onContextMenu={(e) => handleRightClick(e, project)}>\r\n              <CardMedia component=\"img\" height=\"400\" image={project.image} alt={project.title} />\r\n              <CardContent>\r\n                <Typography variant=\"h5\">{project.title}</Typography>\r\n                <Typography>{project.description}</Typography>\r\n                <Button variant=\"contained\" href={project.link} target=\"_blank\" sx={{ marginTop: '10px' }}>\r\n                  View Project\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Add Project Dialog */}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>{editProject ? 'Update Project' : 'Add New Project'}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            fullWidth\r\n            value={newProject.title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            fullWidth\r\n            value={newProject.description}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Image URL\"\r\n            name=\"image\"\r\n            fullWidth\r\n            value={newProject.image}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Project Link\"\r\n            name=\"link\"\r\n            fullWidth\r\n            value={newProject.link}\r\n            onChange={handleInputChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={editProject ? handleUpdateSubmit : handleAddProject} variant=\"contained\" color=\"primary\">\r\n            {editProject ? 'Update' : 'Add'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Context Menu for Deleting or Updating a Project */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseContextMenu}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={handleDeleteProject}\r\n          sx={{\r\n            color: 'red',\r\n            '&:hover': {\r\n              backgroundColor: '#f8d7da',\r\n            },\r\n          }}\r\n        >\r\n          <IconButton edge=\"start\" color=\"inherit\" sx={{ marginRight: '10px' }}>\r\n            <Delete />\r\n          </IconButton>\r\n          Delete Project\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={handleUpdateProject}\r\n          sx={{\r\n            color: 'blue',\r\n            '&:hover': {\r\n              backgroundColor: '#cce5ff',\r\n            },\r\n          }}\r\n        >\r\n          <IconButton edge=\"start\" color=\"inherit\" sx={{ marginRight: '10px' }}>\r\n            <Edit />\r\n          </IconButton>\r\n          Update Project\r\n        </MenuItem>\r\n      </Menu>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["Projects","projects","setProjects","useState","open","setOpen","newProject","setNewProject","title","description","image","link","editProject","setEditProject","anchorEl","setAnchorEl","currentProject","setCurrentProject","useEffect","axios","get","then","response","data","handleOpen","handleClose","handleInputChange","e","name","value","target","handleCloseContextMenu","_jsxs","Container","sx","padding","id","children","_jsx","Typography","variant","align","gutterBottom","marginBottom","Button","color","onClick","Grid","container","spacing","map","project","index","item","xs","sm","md","Card","onContextMenu","handleRightClick","event","preventDefault","currentTarget","CardMedia","component","height","alt","CardContent","href","marginTop","Dialog","onClose","DialogTitle","DialogContent","TextField","margin","label","fullWidth","onChange","DialogActions","handleUpdateSubmit","put","updatedProjects","catch","error","console","alert","handleAddProject","post","Menu","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleDeleteProject","delete","filter","backgroundColor","IconButton","edge","marginRight","Delete","handleUpdateProject","Edit"],"sourceRoot":""}