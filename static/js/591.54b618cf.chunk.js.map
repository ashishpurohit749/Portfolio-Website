{"version":3,"file":"static/js/591.54b618cf.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Snackbar/useSnackbar.js","../node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../node_modules/@mui/material/Snackbar/snackbarClasses.js","../node_modules/@mui/material/Snackbar/Snackbar.js","pages/Contact.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useTimeout as useTimeout } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base-ui/react-snackbar/hooks-api/#use-snackbar)\n */\nfunction useSnackbar(parameters = {}) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = useTimeout();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        if (nativeEvent.key === 'Escape') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose?.(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose?.(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    timerAutoHide.start(autoHideDurationParam, () => {\n      handleClose(null, 'timeout');\n    });\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return timerAutoHide.clear;\n  }, [open, autoHideDuration, setAutoHideTimer, timerAutoHide]);\n  const handleClickAway = event => {\n    onClose?.(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = timerAutoHide.clear;\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback?.(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback?.(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback?.(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback?.(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, open, handleResume, handlePause]);\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = {\n      ...extractEventHandlers(parameters),\n      ...extractEventHandlers(externalProps)\n    };\n    return {\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation',\n      ...externalProps,\n      ...externalEventHandlers,\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    };\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}\nexport default useSnackbar;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport getReactElementRef from '@mui/utils/getReactElementRef';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/material-ui/react-click-away-listener/)\n * - [Menu](https://mui.com/material-ui/react-menu/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/material-ui/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(getReactElementRef(children), nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().includes(nodeRef.current);\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getSnackbarContentUtilityClass } from \"./snackbarContentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    ...theme.typography.body2,\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  };\n}));\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n    action,\n    className,\n    message,\n    role = 'alert',\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, {\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useSnackbar from \"./useSnackbar.js\";\nimport ClickAwayListener from \"../ClickAwayListener/index.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport Grow from \"../Grow/index.js\";\nimport SnackbarContent from \"../SnackbarContent/index.js\";\nimport { getSnackbarUtilityClass } from \"./snackbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.snackbar,\n  position: 'fixed',\n  display: 'flex',\n  left: 8,\n  right: 8,\n  justifyContent: 'center',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top',\n    style: {\n      top: 8,\n      [theme.breakpoints.up('sm')]: {\n        top: 24\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical !== 'top',\n    style: {\n      bottom: 8,\n      [theme.breakpoints.up('sm')]: {\n        bottom: 24\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.horizontal === 'left',\n    style: {\n      justifyContent: 'flex-start',\n      [theme.breakpoints.up('sm')]: {\n        left: 24,\n        right: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.horizontal === 'right',\n    style: {\n      justifyContent: 'flex-end',\n      [theme.breakpoints.up('sm')]: {\n        right: 24,\n        left: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.horizontal === 'center',\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        left: '50%',\n        right: 'auto',\n        transform: 'translateX(-50%)'\n      }\n    }\n  }]\n})));\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onBlur,\n    onClose,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps: {\n      onEnter,\n      onExited,\n      ...TransitionProps\n    } = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  };\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar({\n    ...ownerState\n  });\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, {\n    onClickAway: onClickAway,\n    ...ClickAwayListenerProps,\n    children: /*#__PURE__*/_jsx(SnackbarRoot, {\n      ...rootProps,\n      children: /*#__PURE__*/_jsx(TransitionComponent, {\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited,\n        ...TransitionProps,\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, {\n          message: message,\n          action: action,\n          ...ContentProps\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](https://mui.com/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive snackbars using a single parent-rendered\n   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.\n   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update\n   * in place, and features like `autoHideDuration` could be affected.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","import React, { useState } from 'react';\r\nimport { Container, TextField, Button, Typography, Grid, Paper, Snackbar } from '@mui/material';\r\n\r\nconst Contact = () => {\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Display a success message\r\n    setOpenSnackbar(true);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: 'linear-gradient(135deg, #6a11cb, #2575fc)', padding: '80px 0' }}>\r\n      <Container sx={{ display: 'flex', justifyContent: 'center', padding: '0 20px' }} id=\"contact\">\r\n        <Paper\r\n          sx={{\r\n            width: '100%',\r\n            maxWidth: '600px',\r\n            padding: '30px',\r\n            borderRadius: '15px',\r\n            boxShadow: '0 8px 24px rgba(0, 0, 0, 0.3)',\r\n            background: '#ffffff',\r\n            transform: 'translateY(0)',\r\n            transition: 'transform 0.3s ease-in-out',\r\n            '&:hover': {\r\n              transform: 'translateY(-10px)', // Adds a floating effect\r\n            },\r\n          }}\r\n        >\r\n          <Typography variant=\"h2\" align=\"center\" sx={{ marginBottom: '20px', fontWeight: 'bold', color: '#333', fontSize: { xs: '1.8rem', sm: '2.2rem' } }}>\r\n            Get in Touch\r\n          </Typography>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Your Name\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  sx={{\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: '30px',\r\n                    },\r\n                    '& .MuiInputLabel-root': {\r\n                      fontWeight: 'bold',\r\n                    },\r\n                  }}\r\n                  aria-label=\"Your Name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  sx={{\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: '30px',\r\n                    },\r\n                    '& .MuiInputLabel-root': {\r\n                      fontWeight: 'bold',\r\n                    },\r\n                  }}\r\n                  aria-label=\"Email Address\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Message\"\r\n                  multiline\r\n                  rows={4}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  sx={{\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: '30px',\r\n                    },\r\n                    '& .MuiInputLabel-root': {\r\n                      fontWeight: 'bold',\r\n                    },\r\n                  }}\r\n                  aria-label=\"Message\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  sx={{\r\n                    padding: '15px',\r\n                    textTransform: 'none',\r\n                    fontSize: '16px',\r\n                    borderRadius: '30px',\r\n                    '&:hover': {\r\n                      backgroundColor: '#FF5722',\r\n                      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)', // Adding hover shadow\r\n                    },\r\n                  }}\r\n                >\r\n                  Send Message\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n\r\n      {/* Snackbar for form submission success */}\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        message=\"Thank you for reaching out! I will get back to you soon.\"\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["parameters","arguments","length","undefined","autoHideDuration","disableWindowBlurListener","onClose","open","resumeHideDuration","timerAutoHide","useTimeout","React","document","addEventListener","handleKeyDown","removeEventListener","nativeEvent","defaultPrevented","key","handleClose","useEventCallback","event","reason","setAutoHideTimer","autoHideDurationParam","start","clear","handlePause","handleResume","createHandleFocus","otherHandlers","onFocusCallback","onFocus","createMouseEnter","onMouseEnterCallback","onMouseEnter","createMouseLeave","onMouseLeaveCallback","onMouseLeave","window","getRootProps","externalProps","externalEventHandlers","extractEventHandlers","role","onBlur","onBlurCallback","onClickAway","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","disableReactTree","mouseEvent","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","getReactElementRef","handleClickAway","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","includes","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","ref","mappedTouchEvent","handleTouchMove","mappedMouseEvent","_jsx","getSnackbarContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","SnackbarContentRoot","styled","Paper","name","overridesResolver","styles","root","memoTheme","_ref","theme","emphasis","palette","mode","backgroundColor","emphasize","background","default","typography","body2","color","vars","SnackbarContent","getContrastText","bg","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","message","SnackbarContentAction","action","marginLeft","paddingLeft","marginRight","inProps","useDefaultProps","className","other","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","square","elevation","clsx","getSnackbarUtilityClass","SnackbarRoot","capitalize","anchorOrigin","vertical","horizontal","zIndex","snackbar","position","left","right","justifyContent","variants","_ref2","style","top","_ref3","bottom","_ref4","_ref5","_ref6","transform","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ClickAwayListenerProps","ContentProps","TransitionComponent","Grow","transitionDuration","TransitionProps","onEnter","onExited","slots","useSnackbar","exited","setExited","rootProps","useSlotProps","elementType","getSlotProps","externalForwardedProps","additionalProps","appear","in","timeout","direction","handleEnter","node","isAppearing","Contact","openSnackbar","setOpenSnackbar","useState","Container","sx","id","width","maxWidth","boxShadow","transition","Typography","variant","align","marginBottom","fontWeight","fontSize","xs","sm","onSubmit","e","preventDefault","Grid","container","spacing","item","TextField","label","fullWidth","required","type","multiline","rows","Button","textTransform","Snackbar","handleCloseSnackbar"],"sourceRoot":""}